// Code generated by protoc-gen-go.
// source: github.com/fuserobotics/reporter/remote/remote-service.proto
// DO NOT EDIT!

/*
Package remote is a generated protocol buffer package.

It is generated from these files:
	github.com/fuserobotics/reporter/remote/remote-service.proto

It has these top-level messages:
	RemoteStreamEntry
	RemoteStreamConfig
	RequestContext
	GetRemoteConfigRequest
	GetRemoteConfigResponse
	PushStreamEntryRequest
	PushStreamEntryResponse
*/
package remote

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
import stream "github.com/fuserobotics/statestream"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RemoteStreamEntry struct {
	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	EntryType int32  `protobuf:"varint,2,opt,name=entry_type,json=entryType" json:"entry_type,omitempty"`
	JsonData  string `protobuf:"bytes,3,opt,name=json_data,json=jsonData" json:"json_data,omitempty"`
}

func (m *RemoteStreamEntry) Reset()                    { *m = RemoteStreamEntry{} }
func (m *RemoteStreamEntry) String() string            { return proto.CompactTextString(m) }
func (*RemoteStreamEntry) ProtoMessage()               {}
func (*RemoteStreamEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type RemoteStreamConfig struct {
	Crc32   int32                        `protobuf:"varint,1,opt,name=crc32" json:"crc32,omitempty"`
	Streams []*RemoteStreamConfig_Stream `protobuf:"bytes,2,rep,name=streams" json:"streams,omitempty"`
}

func (m *RemoteStreamConfig) Reset()                    { *m = RemoteStreamConfig{} }
func (m *RemoteStreamConfig) String() string            { return proto.CompactTextString(m) }
func (*RemoteStreamConfig) ProtoMessage()               {}
func (*RemoteStreamConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RemoteStreamConfig) GetStreams() []*RemoteStreamConfig_Stream {
	if m != nil {
		return m.Streams
	}
	return nil
}

type RemoteStreamConfig_Stream struct {
	ComponentId string         `protobuf:"bytes,1,opt,name=component_id,json=componentId" json:"component_id,omitempty"`
	StateId     string         `protobuf:"bytes,2,opt,name=state_id,json=stateId" json:"state_id,omitempty"`
	Config      *stream.Config `protobuf:"bytes,3,opt,name=config" json:"config,omitempty"`
}

func (m *RemoteStreamConfig_Stream) Reset()                    { *m = RemoteStreamConfig_Stream{} }
func (m *RemoteStreamConfig_Stream) String() string            { return proto.CompactTextString(m) }
func (*RemoteStreamConfig_Stream) ProtoMessage()               {}
func (*RemoteStreamConfig_Stream) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *RemoteStreamConfig_Stream) GetConfig() *stream.Config {
	if m != nil {
		return m.Config
	}
	return nil
}

type RequestContext struct {
	HostIdentifier string `protobuf:"bytes,1,opt,name=host_identifier,json=hostIdentifier" json:"host_identifier,omitempty"`
	ComponentId    string `protobuf:"bytes,2,opt,name=component_id,json=componentId" json:"component_id,omitempty"`
	StateId        string `protobuf:"bytes,3,opt,name=state_id,json=stateId" json:"state_id,omitempty"`
}

func (m *RequestContext) Reset()                    { *m = RequestContext{} }
func (m *RequestContext) String() string            { return proto.CompactTextString(m) }
func (*RequestContext) ProtoMessage()               {}
func (*RequestContext) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type GetRemoteConfigRequest struct {
	Context *RequestContext `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
}

func (m *GetRemoteConfigRequest) Reset()                    { *m = GetRemoteConfigRequest{} }
func (m *GetRemoteConfigRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRemoteConfigRequest) ProtoMessage()               {}
func (*GetRemoteConfigRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetRemoteConfigRequest) GetContext() *RequestContext {
	if m != nil {
		return m.Context
	}
	return nil
}

type GetRemoteConfigResponse struct {
	Config *RemoteStreamConfig `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
}

func (m *GetRemoteConfigResponse) Reset()                    { *m = GetRemoteConfigResponse{} }
func (m *GetRemoteConfigResponse) String() string            { return proto.CompactTextString(m) }
func (*GetRemoteConfigResponse) ProtoMessage()               {}
func (*GetRemoteConfigResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetRemoteConfigResponse) GetConfig() *RemoteStreamConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type PushStreamEntryRequest struct {
	Context     *RequestContext    `protobuf:"bytes,1,opt,name=context" json:"context,omitempty"`
	Entry       *RemoteStreamEntry `protobuf:"bytes,2,opt,name=entry" json:"entry,omitempty"`
	ConfigCrc32 int32              `protobuf:"varint,3,opt,name=config_crc32,json=configCrc32" json:"config_crc32,omitempty"`
}

func (m *PushStreamEntryRequest) Reset()                    { *m = PushStreamEntryRequest{} }
func (m *PushStreamEntryRequest) String() string            { return proto.CompactTextString(m) }
func (*PushStreamEntryRequest) ProtoMessage()               {}
func (*PushStreamEntryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PushStreamEntryRequest) GetContext() *RequestContext {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *PushStreamEntryRequest) GetEntry() *RemoteStreamEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type PushStreamEntryResponse struct {
	// If the crc32 provided is wrong, will return config
	Config *RemoteStreamConfig `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
}

func (m *PushStreamEntryResponse) Reset()                    { *m = PushStreamEntryResponse{} }
func (m *PushStreamEntryResponse) String() string            { return proto.CompactTextString(m) }
func (*PushStreamEntryResponse) ProtoMessage()               {}
func (*PushStreamEntryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PushStreamEntryResponse) GetConfig() *RemoteStreamConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func init() {
	proto.RegisterType((*RemoteStreamEntry)(nil), "remote.RemoteStreamEntry")
	proto.RegisterType((*RemoteStreamConfig)(nil), "remote.RemoteStreamConfig")
	proto.RegisterType((*RemoteStreamConfig_Stream)(nil), "remote.RemoteStreamConfig.Stream")
	proto.RegisterType((*RequestContext)(nil), "remote.RequestContext")
	proto.RegisterType((*GetRemoteConfigRequest)(nil), "remote.GetRemoteConfigRequest")
	proto.RegisterType((*GetRemoteConfigResponse)(nil), "remote.GetRemoteConfigResponse")
	proto.RegisterType((*PushStreamEntryRequest)(nil), "remote.PushStreamEntryRequest")
	proto.RegisterType((*PushStreamEntryResponse)(nil), "remote.PushStreamEntryResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for ReporterRemoteService service

type ReporterRemoteServiceClient interface {
	GetRemoteConfig(ctx context.Context, in *GetRemoteConfigRequest, opts ...grpc.CallOption) (*GetRemoteConfigResponse, error)
	PushStreamEntry(ctx context.Context, in *PushStreamEntryRequest, opts ...grpc.CallOption) (*PushStreamEntryResponse, error)
}

type reporterRemoteServiceClient struct {
	cc *grpc.ClientConn
}

func NewReporterRemoteServiceClient(cc *grpc.ClientConn) ReporterRemoteServiceClient {
	return &reporterRemoteServiceClient{cc}
}

func (c *reporterRemoteServiceClient) GetRemoteConfig(ctx context.Context, in *GetRemoteConfigRequest, opts ...grpc.CallOption) (*GetRemoteConfigResponse, error) {
	out := new(GetRemoteConfigResponse)
	err := grpc.Invoke(ctx, "/remote.ReporterRemoteService/GetRemoteConfig", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reporterRemoteServiceClient) PushStreamEntry(ctx context.Context, in *PushStreamEntryRequest, opts ...grpc.CallOption) (*PushStreamEntryResponse, error) {
	out := new(PushStreamEntryResponse)
	err := grpc.Invoke(ctx, "/remote.ReporterRemoteService/PushStreamEntry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ReporterRemoteService service

type ReporterRemoteServiceServer interface {
	GetRemoteConfig(context.Context, *GetRemoteConfigRequest) (*GetRemoteConfigResponse, error)
	PushStreamEntry(context.Context, *PushStreamEntryRequest) (*PushStreamEntryResponse, error)
}

func RegisterReporterRemoteServiceServer(s *grpc.Server, srv ReporterRemoteServiceServer) {
	s.RegisterService(&_ReporterRemoteService_serviceDesc, srv)
}

func _ReporterRemoteService_GetRemoteConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRemoteConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReporterRemoteServiceServer).GetRemoteConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remote.ReporterRemoteService/GetRemoteConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReporterRemoteServiceServer).GetRemoteConfig(ctx, req.(*GetRemoteConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReporterRemoteService_PushStreamEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushStreamEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReporterRemoteServiceServer).PushStreamEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remote.ReporterRemoteService/PushStreamEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReporterRemoteServiceServer).PushStreamEntry(ctx, req.(*PushStreamEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReporterRemoteService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "remote.ReporterRemoteService",
	HandlerType: (*ReporterRemoteServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRemoteConfig",
			Handler:    _ReporterRemoteService_GetRemoteConfig_Handler,
		},
		{
			MethodName: "PushStreamEntry",
			Handler:    _ReporterRemoteService_PushStreamEntry_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() {
	proto.RegisterFile("github.com/fuserobotics/reporter/remote/remote-service.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 573 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x54, 0x4d, 0x8e, 0xd3, 0x4c,
	0x10, 0x95, 0x1d, 0x25, 0x99, 0x94, 0x3f, 0x25, 0x9a, 0xfe, 0x20, 0x24, 0x61, 0x80, 0x8c, 0x17,
	0x10, 0x21, 0x61, 0x0f, 0x9e, 0x15, 0x3f, 0x62, 0x93, 0x41, 0x28, 0x48, 0x48, 0xc8, 0xb0, 0x8f,
	0x1c, 0xa7, 0x93, 0x18, 0xe1, 0x6e, 0xd3, 0x5d, 0x19, 0x88, 0xd0, 0x6c, 0xb8, 0x02, 0x1b, 0x56,
	0x48, 0x9c, 0x89, 0x05, 0x17, 0xe0, 0x20, 0xc8, 0x5d, 0xce, 0x0f, 0x93, 0x84, 0xc5, 0xac, 0xac,
	0x7e, 0x55, 0xae, 0xf7, 0xea, 0x55, 0x75, 0xc3, 0xd3, 0x69, 0x82, 0xb3, 0xf9, 0xc8, 0x8b, 0x65,
	0xea, 0x4f, 0xe6, 0x9a, 0x2b, 0x39, 0x92, 0x98, 0xc4, 0xda, 0x57, 0x3c, 0x93, 0x0a, 0xb9, 0xf2,
	0x15, 0x4f, 0x25, 0xf2, 0xe2, 0xf3, 0x40, 0x73, 0x75, 0x9e, 0xc4, 0xdc, 0xcb, 0x94, 0x44, 0xc9,
	0x2a, 0x84, 0x76, 0x8e, 0xa6, 0x52, 0x4e, 0xdf, 0x73, 0x3f, 0xca, 0x12, 0x3f, 0x12, 0x42, 0x62,
	0x84, 0x89, 0x14, 0x9a, 0xb2, 0x3a, 0x27, 0xfb, 0x38, 0x34, 0x46, 0xc8, 0x35, 0x2a, 0x1e, 0xa5,
	0x7e, 0x2c, 0xc5, 0x24, 0x99, 0xd2, 0x1f, 0x6e, 0x0a, 0x87, 0xa1, 0xa9, 0xfc, 0xc6, 0x04, 0x9f,
	0x0b, 0x54, 0x0b, 0x76, 0x04, 0x35, 0x4c, 0x52, 0xae, 0x31, 0x4a, 0xb3, 0x96, 0xd5, 0xb5, 0x7a,
	0xa5, 0x70, 0x0d, 0xb0, 0x5b, 0x00, 0x3c, 0x4f, 0x1b, 0xe2, 0x22, 0xe3, 0x2d, 0xbb, 0x6b, 0xf5,
	0xca, 0x61, 0xcd, 0x20, 0x6f, 0x17, 0x19, 0x67, 0x37, 0xa1, 0xf6, 0x4e, 0x4b, 0x31, 0x1c, 0x47,
	0x18, 0xb5, 0x4a, 0x5d, 0xab, 0x57, 0x0b, 0x0f, 0x72, 0xe0, 0x2c, 0xc2, 0xc8, 0xfd, 0x65, 0x01,
	0xdb, 0xe4, 0xeb, 0x1b, 0x2d, 0xec, 0x1a, 0x94, 0x63, 0x15, 0x9f, 0x06, 0x86, 0xac, 0x1c, 0xd2,
	0x81, 0x3d, 0x81, 0x2a, 0x49, 0xd6, 0x2d, 0xbb, 0x5b, 0xea, 0x39, 0xc1, 0xb1, 0x47, 0x2e, 0x78,
	0xdb, 0x25, 0x3c, 0x3a, 0x84, 0xcb, 0x3f, 0x3a, 0x02, 0x2a, 0x04, 0xb1, 0x63, 0xf8, 0x2f, 0x96,
	0x69, 0x26, 0x05, 0x17, 0x38, 0x4c, 0xc6, 0x86, 0xa3, 0x16, 0x3a, 0x2b, 0x6c, 0x30, 0x66, 0x6d,
	0x38, 0x30, 0x0e, 0xe5, 0x61, 0xdb, 0x84, 0xab, 0xe6, 0x3c, 0x18, 0xb3, 0xbb, 0x50, 0x21, 0xc3,
	0x4c, 0x2f, 0x4e, 0x50, 0xf7, 0x88, 0xc1, 0x23, 0xde, 0xb0, 0x88, 0xba, 0x1f, 0xa1, 0x1e, 0xf2,
	0x0f, 0x73, 0xae, 0xb1, 0x2f, 0x05, 0xf2, 0x4f, 0xc8, 0xee, 0x41, 0x63, 0x26, 0x75, 0x4e, 0xc9,
	0x05, 0x26, 0x93, 0x84, 0xab, 0x82, 0xba, 0x9e, 0xc3, 0x83, 0x15, 0xba, 0x25, 0xd0, 0xfe, 0xb7,
	0xc0, 0xd2, 0x5f, 0x02, 0xdd, 0x97, 0xd0, 0x7c, 0xc1, 0x91, 0x1c, 0x29, 0x34, 0x91, 0x0e, 0x76,
	0x02, 0xd5, 0x98, 0xb4, 0x18, 0x62, 0x27, 0x68, 0xae, 0xfd, 0xdb, 0x54, 0x1a, 0x2e, 0xd3, 0xdc,
	0x57, 0x70, 0x63, 0xab, 0x96, 0xce, 0xa4, 0xd0, 0x9c, 0x05, 0x2b, 0x1f, 0xa8, 0x56, 0x67, 0xff,
	0x2c, 0x56, 0x9e, 0x7c, 0xb7, 0xa0, 0xf9, 0x7a, 0xae, 0x67, 0x1b, 0xbb, 0x75, 0x65, 0x6d, 0xcc,
	0x87, 0xb2, 0x59, 0x32, 0x63, 0x8f, 0x13, 0xb4, 0x77, 0xf1, 0x13, 0x05, 0xe5, 0x91, 0xad, 0xb9,
	0x8e, 0x21, 0xed, 0x56, 0xc9, 0xec, 0x96, 0x43, 0x58, 0x3f, 0x87, 0xf2, 0x7e, 0xb7, 0xf4, 0x5d,
	0xbd, 0xdf, 0xe0, 0x87, 0x0d, 0xd7, 0xc3, 0xe2, 0x36, 0x17, 0x69, 0x74, 0x89, 0x59, 0x0a, 0x8d,
	0x4b, 0xc6, 0xb2, 0xdb, 0xcb, 0x82, 0xbb, 0xa7, 0xd7, 0xb9, 0xb3, 0x37, 0x4e, 0x0a, 0xdd, 0xf6,
	0x97, 0x9f, 0xbf, 0xbf, 0xda, 0xff, 0xb3, 0x43, 0xff, 0xfc, 0xe1, 0xf2, 0xed, 0x20, 0x21, 0xec,
	0x9b, 0x05, 0x8d, 0x4b, 0x8d, 0xad, 0xf9, 0x76, 0x4f, 0x64, 0xcd, 0xb7, 0xc7, 0x11, 0xf7, 0xcc,
	0xf0, 0x3d, 0x73, 0x1f, 0x6d, 0xf0, 0x7d, 0x2e, 0xa6, 0xe3, 0x6d, 0x2e, 0xf0, 0xc5, 0x1a, 0x5e,
	0x2e, 0xed, 0x85, 0x9f, 0xcd, 0xf5, 0xec, 0xb1, 0x75, 0x7f, 0x54, 0x31, 0xef, 0xce, 0xe9, 0x9f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xac, 0xad, 0x00, 0xa4, 0x0f, 0x05, 0x00, 0x00,
}
