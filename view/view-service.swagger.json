{
  "swagger": "2.0",
  "info": {
    "title": "github.com/fuserobotics/reporter/view/view-service.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/view/all": {
      "get": {
        "operationId": "ListStates",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/viewListStatesResponse"
            }
          }
        },
        "tags": [
          "ReporterService"
        ]
      }
    },
    "/v1/view/{context.component}/{context.state_id}": {
      "get": {
        "operationId": "GetState",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/viewGetStateResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "context.component",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "context.state_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ReporterService"
        ]
      }
    },
    "/v1/view/{context.component}/{context.state_id}/boundedhistory": {
      "get": {
        "operationId": "GetBoundedStateHistory",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/viewBoundedStateHistoryResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "context.component",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "context.state_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ReporterService"
        ]
      }
    },
    "/v1/view/{context.component}/{context.state_id}/history": {
      "get": {
        "operationId": "GetStateHistory",
        "responses": {
          "200": {
            "description": "(streaming responses)",
            "schema": {
              "$ref": "#/definitions/viewStateHistoryResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "context.component",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "context.state_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "ReporterService"
        ]
      }
    }
  },
  "definitions": {
    "BoundedStateHistoryRequestBoundedStateHistoryMode": {
      "type": "string",
      "enum": [
        "SNAPSHOT_BOUND"
      ],
      "default": "SNAPSHOT_BOUND"
    },
    "BoundedStateHistoryResponseBoundedStateHistoryStatus": {
      "type": "string",
      "enum": [
        "BOUNDED_HISTORY_STATUS_NONE",
        "BOUNDED_HISTORY_START_BOUND",
        "BOUNDED_HISTORY_END_BOUND",
        "BOUNDED_HISTORY_INITIAL_SET",
        "BOUNDED_HISTORY_TAIL"
      ],
      "default": "BOUNDED_HISTORY_STATUS_NONE"
    },
    "StateHistoryResponseStateHistoryStatus": {
      "type": "string",
      "enum": [
        "HISTORY_INITIAL_SET",
        "HISTORY_TAIL"
      ],
      "default": "HISTORY_INITIAL_SET"
    },
    "streamConfig": {
      "type": "object",
      "properties": {
        "record_rate": {
          "$ref": "#/definitions/streamRateConfig"
        }
      }
    },
    "streamRateConfig": {
      "type": "object",
      "properties": {
        "change_frequency": {
          "type": "string",
          "format": "int64",
          "title": "Minimum time between mutations in milliseconds"
        },
        "keyframe_frequency": {
          "type": "string",
          "format": "int64",
          "title": "Minimum time between keyframes in milliseconds"
        }
      }
    },
    "viewBoundedStateHistoryRequest": {
      "type": "object",
      "properties": {
        "bounds_only": {
          "type": "boolean",
          "format": "boolean"
        },
        "context": {
          "$ref": "#/definitions/viewStateContext"
        },
        "mid_timestamp": {
          "type": "string",
          "format": "int64"
        },
        "mode": {
          "$ref": "#/definitions/BoundedStateHistoryRequestBoundedStateHistoryMode"
        }
      }
    },
    "viewBoundedStateHistoryResponse": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/viewStateEntry"
        },
        "status": {
          "$ref": "#/definitions/BoundedStateHistoryResponseBoundedStateHistoryStatus"
        }
      }
    },
    "viewGetStateRequest": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/viewStateContext"
        },
        "query": {
          "$ref": "#/definitions/viewStateQuery"
        }
      }
    },
    "viewGetStateResponse": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/viewStateReport"
        }
      }
    },
    "viewListStatesRequest": {
      "type": "object"
    },
    "viewListStatesResponse": {
      "type": "object",
      "properties": {
        "list": {
          "$ref": "#/definitions/viewStateList"
        }
      }
    },
    "viewStateContext": {
      "type": "object",
      "properties": {
        "component": {
          "type": "string",
          "format": "string"
        },
        "host_identifier": {
          "type": "string",
          "format": "string"
        },
        "state_id": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "viewStateEntry": {
      "type": "object",
      "properties": {
        "json_state": {
          "type": "string",
          "format": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "A state entry message"
    },
    "viewStateHistoryQuery": {
      "type": "object",
      "properties": {
        "begin_time": {
          "type": "string",
          "format": "int64",
          "description": "Begin time, or the entire history if zero."
        },
        "end_time": {
          "type": "string",
          "format": "int64",
          "description": "End time, or latest if zero."
        },
        "tail": {
          "type": "boolean",
          "format": "boolean",
          "description": "If end_time == 0 and tail == true then tail entries."
        }
      },
      "description": "Query a range of time."
    },
    "viewStateHistoryRequest": {
      "type": "object",
      "properties": {
        "context": {
          "$ref": "#/definitions/viewStateContext"
        },
        "query": {
          "$ref": "#/definitions/viewStateHistoryQuery"
        },
        "stream_config": {
          "$ref": "#/definitions/streamConfig",
          "title": "Optionally specify a stream config to do batching on the server"
        }
      }
    },
    "viewStateHistoryResponse": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/viewStateEntry"
        },
        "status": {
          "$ref": "#/definitions/StateHistoryResponseStateHistoryStatus"
        }
      },
      "title": "Response in stream of state history.\nMessages will look like:\n - status: 0, state: {state} (etc)\n ! (stream closed here if not tailing)\n - status: 1, state: nil (indicating end of initial set)\n - status: 1, state: {latest tailed state}"
    },
    "viewStateList": {
      "type": "object",
      "properties": {
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/viewStateListComponent"
          }
        }
      }
    },
    "viewStateListComponent": {
      "type": "object",
      "properties": {
        "host_identifier": {
          "type": "string",
          "format": "string"
        },
        "name": {
          "type": "string",
          "format": "string"
        },
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/viewStateListState"
          }
        }
      }
    },
    "viewStateListState": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/streamConfig"
        },
        "name": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "viewStateQuery": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Query a specific time."
    },
    "viewStateReport": {
      "type": "object",
      "properties": {
        "json_state": {
          "type": "string",
          "format": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "A state report message"
    }
  }
}
